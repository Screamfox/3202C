STB接受TS流上的音视频数据后经过解码，再输出到电视机上。输出端口有多种类型，分别是CVBS/SVideo/RGB/YCbCr/YPbPr等。

现在3202C上只有CVBS复合输出，没有YCBCR分量输出，所以要添加该功能。

//=========================================================================
//									渊源
//=========================================================================

CVBS是第一代视频显示输出方式，第二代是S-VIDEO，第三代是VGA，第四代是DVI，第五代是HDMI，由于目前的电视机均有CVBS接口，因此CVBS无形中也成为比较主流的接口。目前随着显示设备的分辨率的提高，特别是大屏幕液晶电视的出现，越来越多的设备提供VGA和HDMI接口。

//=========================================================================
//									CVBS
//=========================================================================

全称：Composite Video Broadcaset Signal / Composite Video Blanking and Sync
中文：复合视频广播信号 / 复合视频消隐和同步


//=========================================================================
//									YCbCr
//=========================================================================

有时被称为YCC，在模拟分量视频中也常被称为YPbPr。

色彩空间有三种：RGB、CMYK 和 YUV
而 YCbCr 是 YUV 家族中被广泛采用的成员，JPEG 和 MPEG 均采用此格式。它的取样格式有4种：
	4:4:4
	4:2:2
	4:1:1
	4:2:0
4:2:0表示每4个像素有4个亮度分量，2个色度分量（YYYYCbCr），仅采样奇数扫描线，是便携式视频设备（MPEG-4）以及电视会议（H.263）最常用的格式；4:2:2表示YYYYCbCrCbCr，是DVD、数字电视、HDTV以及其他消费类视频设备的最常用格式；4:4:4表示全像素点阵，用于高质量视频应用、演播室以及专业视频产品。

为什么会出现这么多采样格式？因为人眼对亮度信号非常敏感，因此可以压缩色度信号。扩大该格式的应用范围。具体说来，比如4:1:1格式：
	一个像素点若用RGB存储，要用 8 x 3 = 24 比特；
	若用YCC，则可以用 8 + 2 + 2 = 12 比特，压缩了一半。
注意：理论上是这样的，实际情况具体分析了。

//=========================================================================
//									S-Video
//=========================================================================

它的全称是Separate-Video，由日本人开发的一种规格。“分离”即将亮度和色度分离传输，避免了混合视频信号传输时亮度和色度的相互干扰。S端子是一种五芯接口，由两路视频亮度信号、两路视频色度信号和一路公共屏蔽地线组成。
S端子输出的最大分辨率是1024x768，不适合高清视频传输，但性价比很好，普遍应用于液晶电视。

//=========================================================================
//									源码
//=========================================================================

struct DacIndex
{
	UINT8 uDacFirst;     // for all   (CVBS , YC_Y ,YUV_Y,RGB_R)
	UINT8 uDacSecond;   //for SVideo & YUV & RGB	(YC_C ,YUV_U,RGB_G)
	UINT8 uDacThird;   //for YUV & RGB	(YUV_V,RGB_B)
};

struct VP_DacInfo
{
	BOOL				bEnable;	
	//enum DacType 		eDacType; //for all
	struct DacIndex		tDacIndex;//which dac is used for eDacType
	enum VgaMode		eVGAMode;//when eDacType is RGB_1,RGB_2, indicate is vga out or tv out and the mode of vga	
	BOOL				bProgressive;//indicate the scan mode when eDacType is component
};

一直不明白DacIndex结构体的构成，今天一看硬件原理图，明白了VDAC原来是一个硬件，再听罗德（公司的硬件工程师）稍微一解释，明白了它原来是一个可配置的硬件，所以有这样的结构，如下配置：
	1. First = CVBS；
	2. First = YC_Y;	Second = YC_C；
	3. First = YUV_Y;	Second = YUV_U;		Third = YUV_V；
	6. First = CAV_Y;	Second = CAV_Pb;	Third = CAV_Pr;
	4. First = RGB_R;	Second = RGB_G;		Third = RGB_B;

//=========================================================================
//									VPO
//=========================================================================

在AppInit中首先注册了VP设备（system_hw_init），然后进行初始化（avInit）。

在 avInit 中：
	...
	deca_open()
	...
	dmx_open(g_dmx_dev)
	// Bind Video Decoder to DMX
	// Bind Audio Decoder to DMX
	// Bind TTX Decoder to DMX
	// Bind SUBTITLE Decoder to DMX
	...
	sdec_open()
	...
	snd_open()
	...
	deca_init_ase();
	...
	vdec_open();
	...
	InitVPPara();	// 这个函数我需要看看
	vpo_open(g_vpo_dev, &tVPInitInfo);
	...
	vdec_io_control();

	return;

InitVPPara:
	就是完成对VPO数据结构的填充。

VPO：Video Post Output
ALI提供了VPO驱动，它是一个显示引擎。
